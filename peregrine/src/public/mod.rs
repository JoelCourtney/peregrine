//! Public API for the Peregrine simulation engine.
//!
//! This module contains all user-facing types, traits, and functions.

use hifitime::Duration;
use std::sync::Arc;
use std::sync::atomic::AtomicU64;

pub mod activity;
pub mod initial_conditions;
pub mod plan;
pub mod resource;
pub mod session;

/// A selection of resources, with tools for creating a plan and storing history.
///
/// Autogenerated by the [model] macro. There is no point implementing this manually.
pub trait Model<'o>: Sync {
    fn init_history(history: &mut crate::internal::history::History);
    fn init_timelines(
        time: Duration,
        initial_conditions: &mut crate::internal::operation::initial_conditions::InitialConditions,
        timelines: &mut crate::internal::timeline::Timelines<'o>,
        order: Arc<AtomicU64>,
    ) -> anyhow::Result<()>;
}
